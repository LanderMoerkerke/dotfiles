#!/bin/sh

export XDG_CURRENT_DESKTOP=river
export XDG_SESSION_DESKTOP=river
export XDG_SESSION_TYPE=wayland

export QT_QPA_PLATFORM=wayland

riverctl map normal Super Return spawn "$TERMINAL"
riverctl map normal Super+Shift Return spawn samedirw

riverctl map normal Super C close
riverctl map normal Control+Alt Delete exit
riverctl map normal Super+Shift Space toggle-float
riverctl map normal Super X spawn lockscreenw
riverctl map normal Super+Shift X spawn systemctl hibernate

riverctl map normal Super D spawn "rofi -show drun -terminal "$TERMINAL" -width 25"
riverctl map normal Super+Shift E spawn wofi-emoji

riverctl map normal Super W spawn "$TERMINAL -e lf"

riverctl map normal Super P spawn "gopass ls --flat | "$PICKER" -i | xargs --no-run-if-empty gopass -o | wl-copy"
riverctl map normal Super+Shift O spawn "gopass ls --flat | "$PICKER" -i | xargs --no-run-if-empty gopass otp -o | wl-copy"

riverctl map normal Super+Shift D spawn useful-data
riverctl map normal Super+Shift C spawn open-config
riverctl map normal Super+Shift W spawn wg-actions

riverctl map normal Super B spawn "$BROWSER"
riverctl map normal Super+Shift B spawn "$BROWSER2"

riverctl map normal Super G spawn "echo -n "$EMAIL_PRIMARY" | wl-copy"
riverctl map normal Super+Shift G spawn "echo -n "$EMAIL_SECONDARY" | wl-copy"

riverctl map normal Super Insert spawn showclip
riverctl map normal Control+Shift Print spawn crop-screenshotw

riverctl map normal Control Space spawn "dunstctl close"
riverctl map normal Control+Shift Space spawn "dunstctl history-pop"
riverctl map normal Control+Shift Period spawn "dunstctl context"
riverctl map normal Super F1 spawn "dunstctl set-paused true"
riverctl map normal Super+Shift F1 spawn "dunstctl set-paused false"

riverctl map normal Super+Shift T spawn 'killall -SIGUSR1 waybar || waybar'

riverctl map normal Super F "toggle-fullscreen"

riverctl map normal Mod1 TAB "focus-previous-tags"

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Space zoom

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super U focus-output next
riverctl map normal Super I focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift U send-to-output next
riverctl map normal Super+Shift I send-to-output previous

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.03"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.03"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

riverctl map normal Super+Shift N spawn "river-shifttags --shifts +1"
riverctl map normal Super+Shift P spawn "river-shifttags --shifts -1"

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9); do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# TODO: Update with Mod1 + \d <07-04-24, Lander>
# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
    # Eject the optical drive (well if you still have ove that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    riverctl map $mode None XF86AudioRaiseVolume spawn 'pactl -- set-sink-volume @DEFAULT_SINK@ +5%'
    riverctl map $mode None XF86AudioLowerVolume spawn 'pactl -- set-sink-volume @DEFAULT_SINK@ -5%'
    riverctl map $mode None XF86AudioMute spawn 'pactl set-sink-mute alsa_output.pci-0000_00_1f.3.analog-stereo toggle'

    riverctl map $mode None XF86AudioMicMute spawn 'pactl set-source-mute alsa_input.pci-0000_00_1f.3.analog-stereo toggle'
    riverctl map $mode Mod1+Shift F4 spawn 'pactl set-source-mute alsa_input.pci-0000_00_1f.3.analog-stereo toggle'

    riverctl map $mode None XF86Bluetooth spawn 'echo "power on\nconnect CC:98:8B:93:3A:17" | bluetoothctl && pactl -- set-sink-volume bluez_sink.CC_98_8B_93_3A_17.a2dp_sink 100%'

    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext spawn 'playerctl next'

    riverctl map $mode Mod1 End spawn 'playerctl play-pause'
    riverctl map $mode Mod1 Home spawn 'playerctl previous'
    riverctl map $mode Mod1 Next spawn 'playerctl next'

    riverctl map $mode None XF86MonBrightnessUp spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

riverctl map normal None XF86PowerOff spawn 'power-menu'

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 200

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 6 -outer-padding 0 &

scratchpad_term=$((1 << 20 ))
riverctl map normal Super T spawn "
    (wlrctl window focus app_id:foot-scratchpad || foot -a foot-scratchpad -e scratch-tmux) && riverctl toggle-focused-tags $scratchpad_term &&
    (wlrctl window focus app_id:foot-scratchpad || foot -a foot-scratchpad -e scratch-tmux)
"
riverctl rule-add -app-id foot-scratchpad float
riverctl rule-add -app-id foot-scratchpad tags ${scratchpad_term}
riverctl rule-add -app-id foot-scratchpad dimensions 1200 800

scratchpad_ferdium=$((1 << 21 ))
riverctl map normal Super+Shift F spawn "
    riverctl toggle-focused-tags $scratchpad_ferdium &&
    (wlrctl window focus app_id:ferdium || ferdium)
"
riverctl rule-add -app-id ferdium float
riverctl rule-add -app-id ferdium tags ${scratchpad_ferdium}

riverctl rule-add -class "qutebrowser" tags 1
riverctl rule-add -class "datagrip" tags $((1 << 6))
riverctl rule-add -title "Spotify Premium" tags $((1 << 7))
riverctl rule-add -class "WebCord" tags $((1 << 8))
# riverctl rule-add -title "Telenet TV" tags $((1 << 8))
# riverctl rule-add -title "VRT MAX" tags $((1 << 8))

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
# all_but_scratch_tag=$(( ((1 << 32) - 1) ^ ($scratchpad_term & $scratchpad_ferdium & $scratchpad_pavucontrol) ))
# riverctl spawn-tagmask ${all_but_scratch_tag}

riverctl keyboard-layout eu

export MOUSE_INPUT=pointer-1739-0-Synaptics_TM3418-002
riverctl input $MOUSE_INPUT pointer-accel 0.5
riverctl input $MOUSE_INPUT tap enabled
riverctl input $MOUSE_INPUT disable-while-typing enabled
riverctl input $MOUSE_INPUT natural-scroll enabled

riverctl focus-follows-cursor normal
riverctl hide-cursor timeout 5000

/usr/bin/kdeconnectd &
battery-popup -L 20 -n -i /home/lander/Pictures/Notifications/low-battery.png &
dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river &
foot --server &
hyprpaper &
pypr &
swayidle &
way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1 &
waybar &
